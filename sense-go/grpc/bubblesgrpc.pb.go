// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bubblesgrpc.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message
type SensorRequest struct {
	Sequence             int32    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	TypeId               string   `protobuf:"bytes,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SensorRequest) Reset()         { *m = SensorRequest{} }
func (m *SensorRequest) String() string { return proto.CompactTextString(m) }
func (*SensorRequest) ProtoMessage()    {}
func (*SensorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5bad154add7dc60, []int{0}
}

func (m *SensorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorRequest.Unmarshal(m, b)
}
func (m *SensorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorRequest.Marshal(b, m, deterministic)
}
func (m *SensorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorRequest.Merge(m, src)
}
func (m *SensorRequest) XXX_Size() int {
	return xxx_messageInfo_SensorRequest.Size(m)
}
func (m *SensorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SensorRequest proto.InternalMessageInfo

func (m *SensorRequest) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *SensorRequest) GetTypeId() string {
	if m != nil {
		return m.TypeId
	}
	return ""
}

func (m *SensorRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// The response message containing the greetings
type SensorReply struct {
	Sequence             int32    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	TypeId               string   `protobuf:"bytes,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SensorReply) Reset()         { *m = SensorReply{} }
func (m *SensorReply) String() string { return proto.CompactTextString(m) }
func (*SensorReply) ProtoMessage()    {}
func (*SensorReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5bad154add7dc60, []int{1}
}

func (m *SensorReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorReply.Unmarshal(m, b)
}
func (m *SensorReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorReply.Marshal(b, m, deterministic)
}
func (m *SensorReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorReply.Merge(m, src)
}
func (m *SensorReply) XXX_Size() int {
	return xxx_messageInfo_SensorReply.Size(m)
}
func (m *SensorReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorReply.DiscardUnknown(m)
}

var xxx_messageInfo_SensorReply proto.InternalMessageInfo

func (m *SensorReply) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *SensorReply) GetTypeId() string {
	if m != nil {
		return m.TypeId
	}
	return ""
}

func (m *SensorReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *SensorReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The request message
type GetStateRequest struct {
	Sequence             int32    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	TypeId               string   `protobuf:"bytes,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateRequest) Reset()         { *m = GetStateRequest{} }
func (m *GetStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetStateRequest) ProtoMessage()    {}
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5bad154add7dc60, []int{2}
}

func (m *GetStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateRequest.Unmarshal(m, b)
}
func (m *GetStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateRequest.Marshal(b, m, deterministic)
}
func (m *GetStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateRequest.Merge(m, src)
}
func (m *GetStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetStateRequest.Size(m)
}
func (m *GetStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateRequest proto.InternalMessageInfo

func (m *GetStateRequest) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *GetStateRequest) GetTypeId() string {
	if m != nil {
		return m.TypeId
	}
	return ""
}

func (m *GetStateRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// The response message containing the greetings
type GetStateReply struct {
	Sequence             int32    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	TypeId               string   `protobuf:"bytes,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	TempF                float32  `protobuf:"fixed32,4,opt,name=tempF,proto3" json:"tempF,omitempty"`
	Humidity             float32  `protobuf:"fixed32,5,opt,name=humidity,proto3" json:"humidity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateReply) Reset()         { *m = GetStateReply{} }
func (m *GetStateReply) String() string { return proto.CompactTextString(m) }
func (*GetStateReply) ProtoMessage()    {}
func (*GetStateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5bad154add7dc60, []int{3}
}

func (m *GetStateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateReply.Unmarshal(m, b)
}
func (m *GetStateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateReply.Marshal(b, m, deterministic)
}
func (m *GetStateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateReply.Merge(m, src)
}
func (m *GetStateReply) XXX_Size() int {
	return xxx_messageInfo_GetStateReply.Size(m)
}
func (m *GetStateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateReply proto.InternalMessageInfo

func (m *GetStateReply) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *GetStateReply) GetTypeId() string {
	if m != nil {
		return m.TypeId
	}
	return ""
}

func (m *GetStateReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *GetStateReply) GetTempF() float32 {
	if m != nil {
		return m.TempF
	}
	return 0
}

func (m *GetStateReply) GetHumidity() float32 {
	if m != nil {
		return m.Humidity
	}
	return 0
}

// The request message
type GetRecordListRequest struct {
	Sequence             int32    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	TypeId               string   `protobuf:"bytes,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordListRequest) Reset()         { *m = GetRecordListRequest{} }
func (m *GetRecordListRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecordListRequest) ProtoMessage()    {}
func (*GetRecordListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5bad154add7dc60, []int{4}
}

func (m *GetRecordListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordListRequest.Unmarshal(m, b)
}
func (m *GetRecordListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordListRequest.Marshal(b, m, deterministic)
}
func (m *GetRecordListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordListRequest.Merge(m, src)
}
func (m *GetRecordListRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecordListRequest.Size(m)
}
func (m *GetRecordListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordListRequest proto.InternalMessageInfo

func (m *GetRecordListRequest) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *GetRecordListRequest) GetTypeId() string {
	if m != nil {
		return m.TypeId
	}
	return ""
}

func (m *GetRecordListRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// The response message containing the greetings - query defined in request.data, json results in reply.data
type GetRecordListReply struct {
	Sequence             int32    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	TypeId               string   `protobuf:"bytes,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Data                 string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordListReply) Reset()         { *m = GetRecordListReply{} }
func (m *GetRecordListReply) String() string { return proto.CompactTextString(m) }
func (*GetRecordListReply) ProtoMessage()    {}
func (*GetRecordListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5bad154add7dc60, []int{5}
}

func (m *GetRecordListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordListReply.Unmarshal(m, b)
}
func (m *GetRecordListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordListReply.Marshal(b, m, deterministic)
}
func (m *GetRecordListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordListReply.Merge(m, src)
}
func (m *GetRecordListReply) XXX_Size() int {
	return xxx_messageInfo_GetRecordListReply.Size(m)
}
func (m *GetRecordListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordListReply proto.InternalMessageInfo

func (m *GetRecordListReply) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *GetRecordListReply) GetTypeId() string {
	if m != nil {
		return m.TypeId
	}
	return ""
}

func (m *GetRecordListReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *GetRecordListReply) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*SensorRequest)(nil), "bubblesgrpc.SensorRequest")
	proto.RegisterType((*SensorReply)(nil), "bubblesgrpc.SensorReply")
	proto.RegisterType((*GetStateRequest)(nil), "bubblesgrpc.GetStateRequest")
	proto.RegisterType((*GetStateReply)(nil), "bubblesgrpc.GetStateReply")
	proto.RegisterType((*GetRecordListRequest)(nil), "bubblesgrpc.GetRecordListRequest")
	proto.RegisterType((*GetRecordListReply)(nil), "bubblesgrpc.GetRecordListReply")
}

func init() { proto.RegisterFile("bubblesgrpc.proto", fileDescriptor_f5bad154add7dc60) }

var fileDescriptor_f5bad154add7dc60 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xcb, 0x6a, 0xe3, 0x40,
	0x10, 0x5c, 0x79, 0xfd, 0xda, 0x36, 0xc6, 0xbb, 0x83, 0xbd, 0x11, 0x22, 0x10, 0x47, 0x27, 0x43,
	0xc0, 0x87, 0xe4, 0x0b, 0xe2, 0x80, 0x8d, 0x21, 0x07, 0x23, 0x13, 0x08, 0xb9, 0x18, 0x49, 0xd3,
	0x71, 0x04, 0x92, 0x47, 0x99, 0x69, 0x11, 0x74, 0xcc, 0x0f, 0xe4, 0x9b, 0x83, 0x46, 0x96, 0x1f,
	0xca, 0xe3, 0x10, 0x74, 0x9b, 0xea, 0x2e, 0xaa, 0xa8, 0x99, 0x1a, 0xf8, 0xe7, 0x25, 0x9e, 0x17,
	0xa2, 0x5a, 0xcb, 0xd8, 0x1f, 0xc7, 0x52, 0x90, 0x60, 0x9d, 0x83, 0x91, 0x7d, 0x0f, 0xdd, 0x25,
	0x6e, 0x94, 0x90, 0x0e, 0x3e, 0x27, 0xa8, 0x88, 0x59, 0xd0, 0x56, 0xd9, 0x71, 0xe3, 0xa3, 0x69,
	0x0c, 0x8d, 0x51, 0xc3, 0xd9, 0x61, 0x76, 0x02, 0x2d, 0x4a, 0x63, 0x5c, 0x05, 0xdc, 0xac, 0x0d,
	0x8d, 0xd1, 0x1f, 0xa7, 0x99, 0xc1, 0x39, 0x67, 0x0c, 0xea, 0xdc, 0x25, 0xd7, 0xfc, 0xad, 0xa7,
	0xfa, 0x6c, 0x13, 0x74, 0x0a, 0xe5, 0x38, 0x4c, 0x7f, 0xa6, 0xfb, 0x1f, 0x9a, 0x12, 0x55, 0x12,
	0xd2, 0x56, 0x79, 0x8b, 0x98, 0x09, 0xad, 0x08, 0x95, 0x72, 0xd7, 0x68, 0xd6, 0xf5, 0xa2, 0x80,
	0xf6, 0x03, 0xf4, 0x66, 0x48, 0x4b, 0x72, 0x09, 0x2b, 0x4f, 0xf4, 0x66, 0x40, 0x77, 0x2f, 0x5e,
	0x79, 0xa8, 0x3e, 0x34, 0x08, 0xa3, 0x78, 0xaa, 0x23, 0xd5, 0x9c, 0x1c, 0x64, 0x16, 0x4f, 0x49,
	0x14, 0xf0, 0x80, 0x52, 0xb3, 0xa1, 0x17, 0x3b, 0x6c, 0xaf, 0xa0, 0x3f, 0x43, 0x72, 0xd0, 0x17,
	0x92, 0xdf, 0x06, 0x8a, 0x2a, 0x4f, 0x9c, 0x00, 0x2b, 0x19, 0x54, 0x9e, 0xba, 0xb0, 0xad, 0xef,
	0x6d, 0x2f, 0x5f, 0x6b, 0x30, 0xc8, 0xbb, 0xb3, 0x24, 0x21, 0xf1, 0x7a, 0xc3, 0xa7, 0x42, 0xbe,
	0xb8, 0x92, 0xb3, 0x39, 0xf4, 0xca, 0x23, 0x6b, 0x7c, 0x58, 0xf1, 0xa3, 0x32, 0x5b, 0xe6, 0xa7,
	0xbb, 0x38, 0x4c, 0xed, 0x5f, 0x6c, 0x0a, 0xed, 0xe2, 0x31, 0xd9, 0xe9, 0x11, 0xaf, 0x54, 0x20,
	0xcb, 0xfa, 0x62, 0x9b, 0xeb, 0xdc, 0xe9, 0x52, 0xec, 0xef, 0x88, 0x9d, 0x97, 0xe9, 0x1f, 0x1e,
	0xc8, 0x3a, 0xfb, 0x8e, 0xa2, 0x65, 0x27, 0x17, 0x30, 0xf0, 0x45, 0x34, 0x7e, 0x74, 0x65, 0x28,
	0x0e, 0xd9, 0x93, 0xbf, 0x93, 0x1c, 0xcc, 0x9c, 0xc5, 0xcd, 0x22, 0xfb, 0xd0, 0x0b, 0xc3, 0x6b,
	0xea, 0x9f, 0x7d, 0xf5, 0x1e, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x8d, 0x4e, 0x42, 0xee, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SensorStoreAndForwardClient is the client API for SensorStoreAndForward service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SensorStoreAndForwardClient interface {
	// Sends a greeting
	StoreAndForward(ctx context.Context, in *SensorRequest, opts ...grpc.CallOption) (*SensorReply, error)
	GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateReply, error)
	GetRecordList(ctx context.Context, in *GetRecordListRequest, opts ...grpc.CallOption) (*GetRecordListReply, error)
}

type sensorStoreAndForwardClient struct {
	cc *grpc.ClientConn
}

func NewSensorStoreAndForwardClient(cc *grpc.ClientConn) SensorStoreAndForwardClient {
	return &sensorStoreAndForwardClient{cc}
}

func (c *sensorStoreAndForwardClient) StoreAndForward(ctx context.Context, in *SensorRequest, opts ...grpc.CallOption) (*SensorReply, error) {
	out := new(SensorReply)
	err := c.cc.Invoke(ctx, "/bubblesgrpc.SensorStoreAndForward/StoreAndForward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sensorStoreAndForwardClient) GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateReply, error) {
	out := new(GetStateReply)
	err := c.cc.Invoke(ctx, "/bubblesgrpc.SensorStoreAndForward/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sensorStoreAndForwardClient) GetRecordList(ctx context.Context, in *GetRecordListRequest, opts ...grpc.CallOption) (*GetRecordListReply, error) {
	out := new(GetRecordListReply)
	err := c.cc.Invoke(ctx, "/bubblesgrpc.SensorStoreAndForward/GetRecordList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SensorStoreAndForwardServer is the server API for SensorStoreAndForward service.
type SensorStoreAndForwardServer interface {
	// Sends a greeting
	StoreAndForward(context.Context, *SensorRequest) (*SensorReply, error)
	GetState(context.Context, *GetStateRequest) (*GetStateReply, error)
	GetRecordList(context.Context, *GetRecordListRequest) (*GetRecordListReply, error)
}

// UnimplementedSensorStoreAndForwardServer can be embedded to have forward compatible implementations.
type UnimplementedSensorStoreAndForwardServer struct {
}

func (*UnimplementedSensorStoreAndForwardServer) StoreAndForward(ctx context.Context, req *SensorRequest) (*SensorReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreAndForward not implemented")
}
func (*UnimplementedSensorStoreAndForwardServer) GetState(ctx context.Context, req *GetStateRequest) (*GetStateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetState not implemented")
}
func (*UnimplementedSensorStoreAndForwardServer) GetRecordList(ctx context.Context, req *GetRecordListRequest) (*GetRecordListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecordList not implemented")
}

func RegisterSensorStoreAndForwardServer(s *grpc.Server, srv SensorStoreAndForwardServer) {
	s.RegisterService(&_SensorStoreAndForward_serviceDesc, srv)
}

func _SensorStoreAndForward_StoreAndForward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SensorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SensorStoreAndForwardServer).StoreAndForward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bubblesgrpc.SensorStoreAndForward/StoreAndForward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SensorStoreAndForwardServer).StoreAndForward(ctx, req.(*SensorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SensorStoreAndForward_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SensorStoreAndForwardServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bubblesgrpc.SensorStoreAndForward/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SensorStoreAndForwardServer).GetState(ctx, req.(*GetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SensorStoreAndForward_GetRecordList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecordListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SensorStoreAndForwardServer).GetRecordList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bubblesgrpc.SensorStoreAndForward/GetRecordList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SensorStoreAndForwardServer).GetRecordList(ctx, req.(*GetRecordListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SensorStoreAndForward_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bubblesgrpc.SensorStoreAndForward",
	HandlerType: (*SensorStoreAndForwardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreAndForward",
			Handler:    _SensorStoreAndForward_StoreAndForward_Handler,
		},
		{
			MethodName: "GetState",
			Handler:    _SensorStoreAndForward_GetState_Handler,
		},
		{
			MethodName: "GetRecordList",
			Handler:    _SensorStoreAndForward_GetRecordList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bubblesgrpc.proto",
}
